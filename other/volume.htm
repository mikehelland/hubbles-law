<!DOCTYPE html>
<html>
    <body>

        Divide the volume by <span id="divideByCap"></span>
        <input type="range" min="1" max="200" id="divideBy">

        <hr>
        <div style="display: flex;">
            <canvas id="canvas" width="800" height="800"></canvas>
            <pre style="padding-left: 80px; max-height: 800px; font-size: 20pt; overflow: scroll;" id="outputDiv"></pre>
        </div>

        
        <script>

            divideBy.onchange = () => {
                N = 1 * divideBy.value
                divideByCap.innerHTML = N
                draw()
            }


            const pi = Math.PI
            const kpi = 4 / 3 * pi

            var R = 13.8

            var zoom = 760 / R

            var V = kpi * R**3

            var N = 10
            divideBy.value = 10
            divideByCap.innerHTML = N

            var Vs = []

            var ctx = canvas.getContext("2d")

            var draw = function () {
                canvas.width = canvas.width
                ctx.font = "bold 20pt Arial"

                //ctx.fillText(Math.round(V), 20, 20) 

                ctx.translate(canvas.width / 2, canvas.height)

                ctx.beginPath()
                ctx.arc(0, 0, zoom * R, 0, pi * 2)
                ctx.stroke()

                ctx.beginPath()
                ctx.arc(0, 0, 1, 0, pi * 2)
                ctx.stroke()

                var lastr = 0
                var lastz = 0

                ctx.textAlign = "center"

                var output = ""

                for (var i = 0; i < N; i++) {
                    let Vn = V/N * (1 + i)
                    let r = (Vn / kpi)**(1/3)

                    let z = 1 / (1-r/R) - 1

                    if (z > 1e12) {
                        z = Infinity
                    }
                                    
                    Vs.push({Vn: V/N, r, z})

                    ctx.beginPath()
                    ctx.arc(0, 0, zoom * r, 0, pi * 2)
                    ctx.stroke()

                    ctx.fillText(z.toFixed(2), 0, 4 + -zoom * (lastr + (r - lastr) / 2)) 

                    output += "\n" + lastz.toFixed(2) + " < z < " + z.toFixed(2) 

                    lastr = r
                    lastz = z

                }

                console.log(Vs)

                outputDiv.innerHTML = output
            }


            draw()
        </script>


    </body>
</html>