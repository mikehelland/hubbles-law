<!DOCTYPE html>
<html>
    <head>
        <title>Metallicity</title>
        <style>
            body {
                font-family: Arial, Helvetica, sans-serif;
            }
            #graphs {
                height:400px;
                width: 700px;
                position:relative;
            }
            #graphs canvas {
                position:absolute;
                top: 0;
                left: 0;
                height:400px;
                width: 700px;
            }

            hr {
                opacity: 0.1;
                margin:18px;
            }


            input[type=number] {
                appearance:textfield; /* Firefox */
            }


            .caption {
                /*padding:4px 20px;*/
                text-align: right;
            }



            #sse-hypothesis, #sse-lcdm {
                text-align: right;
                font-weight: bold;
            }

            .MathJax {
                font-size: 5pt !important;
            }

            #legend {
                position: absolute;
                left: 350px;
                top:335px;
            }
            #y-axis {
                position: absolute;
                top: -15px;
                left: 25px;
            }

            td {
                padding-right:20px;

            }
            th {
                padding-right:20px;
                text-align: left;
                font-size: small;
            }
        </style>
    </head>
<body>

    <a href="../index.htm">Home</a>
    <hr>


<h3>Galaxy Properties</h3>

<p>
    <em>Background:</em> According to the big bang theory ... 
</p>

<p>
    Mass:
</p>

<canvas id="mass_canvas" height="250" width="1000"></canvas>

<p>
    Star formation rate
</p>

<canvas id="sfr_canvas" height="250" width="1000"></canvas>

<p>
    Half-light Radius:
</p>

<canvas id="hlr_canvas" height="250" width="1000"></canvas>

<p>
    <a href="https://ui.adsabs.harvard.edu/abs/2019ApJS..242....8Z/abstract">https://ui.adsabs.harvard.edu/abs/2019ApJS..242....8Z/abstract</a>
</p>
<div style="display: flex;">

    <table id="table" style="margin-left: 20px; border: 0px solid #888888; padding:2px; ">
        <tr>
            <th><input type="checkbox" id="hideall" checked="checked"></th>
            <th>Year</th>
            <th>Name</th>
            <th>z (redshift)</th>
            <th>12+log(O/H)</th>
        </tr>

    </table>

    
</div>

    <ol id="ol">
        
    </ol>

    <hr>

    <p>
        <em>More:</em>
        <ul>
            
        </ul>
    </p>

    <hr>
    <a href="../index.htm">Home</a>

<script src="flrw.js"></script>

<script>

    const black = false
    
    var offset = 20
    var OH0 = 6.5

    var Omega_M = 0.3 
    var Omega_L = 0.7
    var Omega_k = 0
    var H0 = 68

    var refs = {}

    var local = [
        {"name": "solar",       "z": 0,  "x": 0,     "OH": 8.69,       "ref": "0"},
        {"name": "Milky Way",   "z": 0,  "x": 0,     "OH": 8.50,       "ref": "0"},
        {"name": "LMC",         "z": 0,  "x": 0,     "OH": 8.37,       "ref": "0"},
        {"name": "SMC",         "z": 0,  "x": 0,     "OH": 8.01,       "ref": "0"}
    ]
        

    var json
    fetch("/data/galaxyprops.json").then(res => res.text()).then(res => {
        
        
        //points.splice(points.length, 0, ...local)

        //drawGraph()
    })
    
    var zs = [];
    [0.5, 1, 2, 3, 4, 5, 10, 20].forEach(z => {
        zs.push({z, t: FLRW(H0, Omega_L, Omega_M, z).lookback})
    })

    bb = FLRW(H0, Omega_L, Omega_M, 12.8).age

    
    drawGraph(mass_canvas)
    drawGraph(sfr_canvas)
    drawGraph(hlr_canvas)


    function drawGraph(graph) {

        var ctxB = graph.getContext("2d")
        var height = graph.height - offset
        var zoom = 1
        var zoomGY = height * 0.31
        var zoomG = zoom * 69
        
        graph.height = graph.clientHeight
        height = graph.height - offset
        zoomGY = height * 0.31
        sseHypothesis = 0

        ctxB.translate(8, 0)
        
        ctxB.lineWidth = 2
        ctxB.fillStyle = black ? "black" : "white"
        ctxB.fillRect(0, 0, graph.width, graph.height)

        ctxB.strokeStyle = !black ? "black" : "white"
        ctxB.strokeRect(offset, offset, graph.width, graph.height - 2*offset)

        ctxB.font = "14px sans-serif"

        ctxB.fillRect(offset + 16, offset + 33, 2, 2)
        ctxB.fillStyle = "black"

        ctxB.fillStyle = !black ? "black" : "white"
        ctxB.textAlign = "left"
        
        ctxB.textAlign = "left"
        ctxB.fillText('Î›CDM', offset, 12)

        ctxB.textAlign = "center"
        ctxB.fillText("Lookback Time (billion years)", graph.width / 2 + offset, graph.height - 30)
        ctxB.fillText("Redshift z", graph.width / 2 + offset, 34)
        
        ctxB.fillStyle = "#404040"
        //ctxB.globalAlpha = 0.2
        ctxB.fillRect(offset + bb * zoomG, offset, 100, graph.height - 2*offset)
        ctxB.globalAlpha = 1
        
        var dgi
        ctxB.font = "10px sans-serif"
        ctxB.fillStyle = "black"
        
        for (dgi = 0; dgi <= 140; dgi+=10) {
            ctxB.fillText(dgi/10, offset + dgi / 10  * zoomG, graph.height - 5)    
        }        

        ctxB.lineWidth = 1
        ctxB.strokeStyle = "#888888"
        zs.forEach(z => {
            ctxB.fillText(z.z, offset + z.t * zoomG, 10)    
            ctxB.beginPath()
            ctxB.moveTo(offset + z.t * zoomG, offset)
            ctxB.lineTo(offset + z.t * zoomG, height)
            ctxB.stroke()
        })

        ctxB.translate(offset, graph.height - offset)

        for (dgi = 0; dgi <= 3; dgi+=0.5) {
            ctxB.fillText(OH0 + dgi, -12, - dgi * zoomGY)    
        }

        for (var i = 0; i < local.length; i++) {
            
            ctxB.globalAlpha = 1
            ctxB.fillRect(
                - 5 + local[i].x * zoomG, 
                - zoomGY * (local[i].OH - OH0) - 10, 
                10, 10)

            ctxB.textAlign = local[i].z > 1 ? "right" : "left"
        
            ctxB.fillText(local[i].name, 
                local[i].x * zoomG + (local[i].z > 1 ? -10 : 10), 
                - zoomGY * (local[i].OH - OH0))

        }

    }



</script>

<script type="text/javascript" src="https://www.hostmath.com/Math/MathJax.js?config=OK"></script>
