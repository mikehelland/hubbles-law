<!DOCTYPE html>
<html>
    <head>
        <meta property="og:image" content="https://mikehelland.github.io/hubbles-law/img/hubbleslaws_graph.png"/>
        <meta property="og:description" content="A demonstration of Hubble's tension and its resolution."/>
        <meta property="og:title" content="Fixing Hubble's Law"/>
        <meta property="og:url" content="https://mikehelland.github.io/hubbles-law/"/>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.4.0/styles/default.min.css">
        <style>
            body {
                background-color: #CCCCCC;
                color:black;
            }
            #right {
                position:fixed;
                left:750px;
                top:10px;    
            }
            
            #graph {
                height:600px;
                width: 600px;
            }

            .text {
                background-color: white;
                max-width: 700px;
                font-family: Arial, Helvetica, sans-serif;
                padding: 15px;
            }

            .pimg  {
                text-align: center;
            }

            li {
                line-height: 1.5em;
            }
            li code, p code {
                background-color: #EEEEEE;
                padding:2px;
                font-weight: bold;
            }

            #y-axis {
                display: none;
            }

            .model {
                min-height: 74px;
            }

            pre code {
                display:block;
                padding:0.5em;
                background: #f0f0f0;
            }
        </style>

    </head>
<body>

<!-- HELLO!!! Source code for the models at the bottom -->

<div class="text">
<h1>Fixing Hubble's Law</h1>

<h2>Introduction</h2>

<p>Finding the right value for Hubble's Constant has been difficult. </p>

<ul>
    <li><a href="https://www.livescience.com/hubble-constant-crisis-deepens.html">No One Can Agree How Fast Universe Is Expanding. New Measure Makes Things Worse.</a></li>
    <li><a href="https://www.scientificamerican.com/article/best-yet-measurements-deepen-cosmological-crisis/">Best-Yet Measurements Deepen Cosmological Crisis</a></li>
    <li>More at <a href="https://duckduckgo.com/?q=hubble+constant+crisis">DuckDuckGo</a></li>
</ul>

<p>To examine the problem, imagine you shoot a laser beam into space, and it passes a series of targets placed 200 million light years apart.</p>

<p>In a simple universe, the laser beam will reach the first target in 200 million years, the second target in 400 million light years, and so on. </p>

<p>Here's a computer model demonstration.</p>

<div class="model" id="staticModel"></div>

<p>The photon moves at a constant speed and reaches the targets at a consistent rate. 
    The graph to the right plots the time it takes to reach a target (y-axis) over the distance to the target (x-axis).</p>
    
<p>This is the model we will be expanding on, so let's look at the code. We'll use JavaScript for simplicity.</p>

<pre><code>
simple = {
    photon: {d: 0},
    next: function () {
        this.photon.d += c
    }
}
</code></pre>

<p>The <code>simple</code> model contains two things, a <code>photon</code> and a <code>next()</code> function. 
    The <code>photon</code> has a distance <code>d</code> which starts at zero. 
    Every time <code>next()</code> is called, <code>d</code> increases by <code>c</code>.</p>

<p>We need to define <code>c</code> and also the units of the model:</p>

<pre><code>
// time units:          1 million years
// distance units:      1 million light years

// the speed of light   1 million light years / million years
const c = 1
</code></pre>

<p>Now we need to do three things:</p>

<ul>
    <li>Add the targets</li>
    <li>Call the <code>next()</code> function in a loop</li>
    <li>Record when the photon passes a target</li>
</ul>

<p>That's what the following function does:</p>

<pre><code>
function run(model) {

    // create targets at distance (d) 200 million light years apart
    model.targets = []
    for (var i = 200; i &lt;= 30000; i+=200) 
        model.targets.push({d: i})

    var t = 0
    var nextTarget = 0

    // start the loop
    while (model.targets[nextTarget]) {

        //advance the model 1 million years
        t += 1
        model.next()

        // if we hit a target record the time
        if (model.photon.d >= model.targets[nextTarget].d) {
            
            console.log("Target reached", t)
            model.targets[nextTarget].hit = t

            nextTarget += 1
        }
    }
}
</code></pre>

<p>The <code>run()</code> function creates an array of targets, and then calls <code>next()</code> in a loop, which moves the photon.
     The time <code>t</code> is recorded whenever the photon passes a target.</p>

<p>Pretty simple, right?</p>

<p>Well, we don't live in such a simple universe. We observe cosmological redshifts. These are an observed fact, and you can learn more about 
    <a href="redshift.htm">cosmological redshift here</a>.
    
<p>The redshifts are interpreted as the expansion of space. In this universe, the targets will be moving away from us according to Hubble's Law:</p>

<pre><code>v = H &times; D</code></pre>

<p>where <code>v</code> is the velocity of the target, <code>H</code> is Hubble's Constant, and <code>D</code> is the starting distance of the target.</p>

<p>To demonstrate that, we need a model where the <code>next()</code> function moves the targets:</p>

<pre><code>
expanding = {
    photon: {d: 0},
    next: function () {
        this.photon.d += c

        // targets move at H &times D
        for (var target of this.targets)
            target.d += H * target.start
    }
}
</code></pre>

<p>While <code>simple.next()</code> just moves the photon, <code>expanding.next()</code> moves the photon and the targets.

<p>The important new line in this model is <code>target.d += H * target.start</code>, and it contains a new constant <code>H</code>, 
    which is Hubble's constant.

<p>So what value do we use for <code>H</code>? 
    According to observations of relatively near phenomena, <code>H</code> is measured to be 74 km/sec/Mpc. 
    But according to measurements at our most distant observable range, <code>H</code> is measured as 67 km/sec/Mpc.</p>

<p>To use these values in the model, they must be converted to the proper units.</p>

<ul>
    <li>Step 1: convert (km/s / Megaparsec) to (km/s / Million light years)</li>
    <li>Step 2: convert (km/s) to (light years / year)</li>
</ul>

Which gives:

<pre>
    74 km/s/Mpc = 22.6880185 km/s/Mly = 7.56790836e-5 ly/y/Mly = 0.00076
    67 km/s/Mpc = 20.5418546 km/s/Mly = 6.85202514e-5 ly/y/Mly = 0.00069
</pre>

<p>When you run the <code>expanding</code> model, notice that the targets are moving away from the photon's source.
    The first one (<code>H = 0.00076</code>) expands slightly faster than the second one (<code>H = 0.00069</code>).

<div class="model" id="expandingFast"></div>

<div class="model" id="expandingSlow"></div>

<p>As the targets recede, the time <code>t</code> it takes the photon to reach the next target increases, 
    as can be seen by the white lines on the graph shooting up and away from the blue line of the simple model.</p>

<p>The difference in the values of <code>H</code> may seem small, but to cosmologists it begs to be resolved.</p>

<hr>

<h2>Hypothesis</h2>

<blockquote> 
    <i>We may state with some confidence that red-shifts are the familiar velocity-shifts, or else they represent some unrecognized principle of nature.
    We cannot assume that our knowledge of physical principles is yet complete; nevertheless, we should not replace a known, 
    familiar principle by an ad hoc explanation unless we are forced to that step by actual observations.</i>

    <br>
    <br>
    E. Hubble, <a href="https://ned.ipac.caltech.edu/level5/Sept04/Hubble/paper.pdf">The Observational Approach to Cosmology</a>, pg. 22, 1937
</blockquote>

<p>Edwin Hubble said that it was convenient for the redshift to be interpreted as a Doppler-like effect, leading to the expanding universe theory. 
    He also said redshifts might be interpreted as how nature actually works. 
    In other words, the redshifts aren't caused by some other phenomenon; cosmological redshift is a new phenomenon in-and-of itself. 
    However, he cautioned, if there are existing ways to explain the redshifts, adding a new principle of nature should be avoided.</p>

<p>But choosing the path of the familiar principles over a new principle 
    has forced us to propose several new principles anyways, including dark energy and inflation. 
    It is also unclear, despite many accurate measurements, how fast space is expanding.</p>

<p>Let's back up then and ask: if cosmological redshifts do represent a new principle of nature, what is that principle? Consider the following premises:</p>

<ul>
    <li>A decrease in frequency is observed</li>
    <li>The <a href="https://byjus.com/wave-speed-formula/" target="_out">speed of a wave</a> is <code>v = frequency &times; wavelength</code></li>
</ul>

<p>Therefore, if these premises are taken literally and plainly (and somewhat naively):</p>

<ul>
    <li>the observed decrease in frequency should result in a decrease in speed.</li>
</ul>

<p>To examine this literal interpretation of redshifts, let's make a new model where the speed of a photon begins at <code>c</code> and decreases 
    as the distance from its source increases.</p>

<p>The simplest of these models is one where <code>H &times; D</code> is subtracted from <code>c</code>.</p>

<p><b>Hypothesis 1: the speed of light = c - H &times; D</b></p>

<pre><code>
hypothesis1 = {
    photon: {d: 0},
    next: function () {
        this.photon.d += c - H * this.photon.d
    }
}
</code></pre>

<div class="model" id="redshift1"></div>

<p>This hypothesis achieves something interesting. Even though the targets are stationary, the time it takes to reach the next target increases 
    in a way that is similar to, but not exactly, the time it would take to reach a moving target.</p>

<p>The difference between the <code>expanding</code> model and <code>hypothesis1</code> is that <code>H &times; D</code> has been moved from the
    velocity of the <code>targets</code>, to the velocity of the <code>photon</code>.</p>

<pre><code>
// expanding.next()                       // hypothesis1.next()
this.photon.d += c                        this.photon.d += c - <span style="color:blue;">H * this.photon.d</span>

for (var target of this.targets) 
    target.d += <span style="color:blue;">H * target.start</span>
</code></pre>


<p>Let's check to see how this affects frequency and red-shift. We're going to modify <code>hypothesis1</code>, not to do anything different,
but to log more data. We'll store the photon's velocity as <code>v</code>.
We'll give the photon an initial wavelength <code>w</code> and frequency <code>freq_init</code> of 499.65 nm and 6&times;10<sup>5</sup>&nbsp;Ghz. 
Then we'll calculate a new frequency <code>freq</code> based on the photon's new velocity <code>v</code>.</p>

<pre><code>
hypothesis1 = {
    photon: {d: 0, freq_init: 6e5, w: 499.65},
    next: function () {
        this.photon.v = c - H * this.photon.d
        this.photon.d += this.photon.v

        this.photon.freq = this.photon.v * 299792458 / this.photon.w
    }
}
</code></pre>
            
<p>Now we can update the <code>run()</code> function to log the photon's velocity and frequency at the time it reaches a target.</p>

<pre><code>
console.log("Target reached", t)
model.targets[nextTarget].hit  = t
model.targets[nextTarget].v    = model.photon.v
model.targets[nextTarget].freq = model.photon.freq
</code></pre>

<p>With this data, we can graph the velocity and frequency of the photon as it travels. Because we have the 
    <code>freq</code> and <code>freq_init</code> we can also graph the red-shift of the photon given by:</p>

<pre><code>z = (freq_init - freq) / freq</code></pre>

<button id="set-y-axis">Set y-axis to red-shift</button>

<p>In this view, the green line for <code>hypothesis1</code> covers up the white line for an <code>expanding</code> model using the same value of <code>H</code>.
    This shows that <code>hypothesis1</code> predicts identical red-shifts for targets of the same distance as the <code>expanding</code> model's 
    <a href="https://en.wikipedia.org/wiki/Comoving_and_proper_distances">co-moving distance</a>.</p>

<p>However, they are <i>not</i> identical models, of course. <code>hypothesis1</code> predicts the photon reaches the target sooner 
    than the photon in the <code>expanding</code> model,
    as seen when the y-axis is set to "time to target".
    That will be investigated later in this paper.</p>

<p>Hypothesis 1 is a very straightforward implementation of the principle that a photon's speed decreases with distance. 
    Another possibility is something like an inverse square law:</p>

<p><b>Hypothesis 2: the speed of light = c / (1 + (H &times; D)<sup>2</sup>)</b></p>

<pre><code>
hypothesis2 = {
    photon: {x: 0},
    next: function () {
        this.photon.x += c / (1 + Math.pow(H * this.photon.x, 2))
    }
}
</code></pre>

<div class="model" id="redshift4"></div>

<p>In this hypothesis, the units of <code>H</code> are independent of the units of <code>c</code>. 
    The units of <code>H</code> are inverse length, which makes <code>(1 + H × D)</code> unitless.
    Hypothesis 2 doesn't match the expected red-shift data exactly like hypothesis 1 does. 
    But it does have some features that will be investigated later in this paper.  
</p> 

<p>You can examine these models and others for yourself on <a href="test.htm">the Testing Page.</a></p>

<p>In these models, the laser beam shows delays in reaching the targets even though the targets are stationary. 
    The delay occurs because the photon red-shifts and its velocity decreases. In such a universe,
    space is not expanding. </p>

<p>This conclusion raises many questions. Some of these questions are answered in the FAQ, such as:</p>
    
<ul>
    <li><a href="faq.htm#expansion-fact">Isn't the expansion of the universe a fact?</a></li>
    <li><a href="faq.htm#special-relativity">Doesn't this conflict with special relativity?</a></li>
    <li><a href="faq.htm#conservation-of-energy">Doesn't this violate the Conservation of Energy?</a></li>    
</ul>

<p>The remainder of this paper this paper will compare this hypothesis to similar sounding models, 
    discuss the treatment of the photon in the model, and examine possible ways to test the hypothesis.</p>

<hr>

<a name="tired-light"></a>
<h2>Comparison to other models</h2>

<h3>Tired Light</h3>

<p>There have been 
    <a href="https://ui.adsabs.harvard.edu/abs/1981A%26AS...45..129R/abstract">hundreds of theories</a> that don't involve expanding space
    trying to explain how light gets "tired" during long intergalactic journeys, 
    starting all the way back in 1929 when the redshift-distance relation was first published.
</p>

<p>Tired light theories fail because they don't
    account for enough redshift, they can't explain the distance factor, or the redshifts are caused in a way that would include other observable results, 
    which ultimately are not observed.</p>

<p>In general, tired light theories have the following in common:</p>

<ul>
    <li>Some other phenomenon causes the redshifts</li>
    <li>Light always travels at <code>c</code>, even though it is "tired"</li>
    <li>They are represented by the blue line on the graph, matching a simple static model</li> 
</ul>

<p>The hypothesis that light's speed is inversely proportional to the distance from its source is different:</p>

<ul>
    <li>Nothing causes the redshifts, they are as fundamental to nature as inertia</li>
    <li>Light travels at less than <code>c</code> after millions of years</li>
    <li>The time it takes light to reach a target is similar to the expanding model</li> 
</ul>

<p>In this hypothesis, one could say light <i>does</i> get "tired",  
    but it does so in a way that is conceptually and mathematically unique to the established 
    <a href="https://en.wikipedia.org/wiki/Tired_light">Tired Light</a> theories.</p>

<a name="vsl"></a>
<h3>Varying Speed of Light (VSL)</h3>

<p>For the last few decades there have been versions of a theory going around known as Varying Speed of Light:</p>

<blockquote><i>
    There are others that think such dark energy ideas are now getting too convoluted, and that a much simpler explanation, one that even Einstein considered, should now be given serious consideration; a change in the speed of light, or VSL (Varying Speed of Light) as others know it by.
<br>
<br>
... The differing values [in Hubble's constant] may be explained if the speed of light has changed between the early and late universe,” said Louise Riofrio, an author and scientist who now works at an observatory association in Hawaii. 
</i>
<br>
<br>
<a href=https://room.eu.com/news/as-mystery-of-the-universes-expansion-rate-widens-a-simple-solution-is-offered">As mystery of the Universe’s expansion rate widens, a simple solution is offered</a>
</blockquote>

<p>In VSL theories:</p>

<ul>
    <li><code>c</code> changes</li>
    <li><i>All</i> photons in the universe slow to the same speed </li>
    <li>Space is expanding</li>
    <li>Intends to represent the accelerating rate of expansion</li>
</ul>

<p>The hypothesis in this paper is different:</p>

<ul>
    <li><code>c</code> is constant</li>
    <li><i>Individual</i> photons slow down according to their own history, not the universe's</li>
    <li>Space is not expanding</li>
    <li>Intends to represent cosmological redshift</li>
</ul>

<p>The speed of light does vary in this hypothesis, but in a novel way to  
    <a href="https://en.wikipedia.org/wiki/Variable_speed_of_light">Varying Speed of Light</a> theories.</p>

<hr>

<a name="photon-treatment"></a>
<h2>Photons</h2>

<p>This model represents light at the individual photon level. 
    It's not a quantum theory, nor is it a relativistic theory, but it's also not completely classical. 
    To illustrate, the photon was defined as having a distance from its source.</p>

<pre><code>
photon = {
    distance: 0
}
</code></pre>

<p>Where is this photon? It doesn't have an <i>(x,y,z)</i> coordinate. Instead, it occupies every point around its source 
    at the specificed distance.
    It's not a classical particle or wave in this form.</p> 

<p>Later, we added velocity, frequency, and wavelength to the photon.</p>

<pre><code>
photon = {
    distance: 0, 
    velocity: 1, 
    frequency: 6e5, 
    wavelength: 499.65
}
</code></pre>

<p>For the purposes of this model, the photon actually only needs distance and energy.</p>

<pre><code>
photon = {
    distance: 0, 
    energy: 2.48, 
}
</code></pre>
    
<p>Given these formulas:</p>

<pre>
    speed of a photon  = c - H &times; D
    energy of a photon = frequency &times; h (Planck's constant)
    speed of wave      = frequency &times; wavelength 
</pre>

</p>the photon's velocity, frequency, and wavelength can be determined at any time.</p>

<p>However, those values don't need to be there at all times, and since the photon is a quantum particle, they probably shouldn't be there until we need them.</p>

<p>What we know about a photon we determine from its interaction with a measurement apparatus, not because we can observe it in-flight.</p>

<p>We know that a red-shifted photon will deliver less energy than it started out with.  
    Assuming the ratio of energy observed to energy emitted is the same ratio as the photon's velocity to <code>c</code>,
    we can calculate the observed energy of a photon using just the photon's original energy and the distance from its source:</p>

<pre>
    <code>
E<sub>observed</sub> = E<sub>emitted</sub> &times; v/c 
         = E<sub>emitted</sub> &times; (c - H &times; D)/c
    </code>
</pre>

<p>And if we put that over Planck's constant (<code>h</code>) we get the new red-shifted frequency of the photon:</p>

<blockquote>
    <code>frequency<sub>observed</sub> = (E<sub>emitted</sub> &times; (c - H &times; D)/c) / h</code>
</blockquote>

<p>The photon's distance from where it was emitted is crucial to keep in mind at all times. 
    Consider light that has traveled billions of years to reach your telescope. 
    The light enters the lens, gets focused to the eyepiece, and then into your eyeball.</p>

<p>Seems pretty straightforward. But at some level, some type of interaction with the light and the lens must be focusing the light. 
    At the quantum level, the photon will have been <a href="http://hyperphysics.phy-astr.gsu.edu/hbase/mod5.html">absorbed by atoms</a> in the lens. 
        Then it is re-emitted (or an entirely new photon is emitted), and focused to your telescope's eyepiece.</p>

<p>The photon may have traveled great distances from its source before it encountered your telescope, 
    but the light inside the telescope will be very close to its source: the lens that focused it. 
    The distance to the source of the photons in the telescope will be less than a meter, not millions of light years.</p>

<p>In that case the refreshed photon will be traveling at <code>c</code>, which now results in an elongated wavelength when calculated.</p>


<hr>

<a name="tests"></a>
<h2>Tests</h2>

<h3>Test 1: measure the speed of a cosmologically red-shifted photon</h3>

<p>This is the first obvious test of the hypothesis.</p>

<p>But it would take thousands or millions of years to perform a fully controlled experiment where light is emitted with a known energy at a 
    known time and travels across a known distance to see the effects of red-shift.</p>
    
<p>Using light that has already traveled millions of years seems to be the only choice.</p>

<p>But interacting with the photon will cause it to reset its distance and speed, as mentioned in the previous section. 
    The task then is to come up with a clever way to measure the speed of ancient light without disturbing the photon.
</p>

<p>Consider a long tube in space with a telescope at one end and an open shutter at the other. 
    The telescope has a nearby galaxy and a highly red-shifted galaxy in its sight. </p>

<p class="pimg">
    <img src="img/experiment1.png">
<p>

<p>What happens when the shutter is closed?</p>

<p><b>Prediction:</b> Because the red light is moving slower than the yellow light, first the nearby galaxy will disappear from view, then the distant one.</p>

<p>Obviously the longer the tube is the better the experiment would be. A few kilometers at least, a light second would be great.
    If we use a predictable and fast enough object in space as the shutter, that might work just as well. 
    The shutter must not reflect any light. The moon may be too bright and too slow to work.</p>

<h3>Test 2: the time to target discrepency</h3> 

<p>It was noted earlier that the expanding model and hypothesis 1 produce the same red-shifts for the same value of <code>H</code>,
    but at different times. The photon in hypothesis 1 reaches its targets before the photon in the expanding model.

<p>work in progress</p>

<h3>Test 3: bread crumbs</h3> 

<p>If the photon has less energy when it arrives than when it left, what about the missing energy? 
    If the universe were trillions of trillions of years old, and light kept losing energy all over the place, you would think there would be barely
    anything left in existence by now.
</p>

<p>For this reason, it seems sensible that any energy deducted from the photon by its journey through space might be deposited along its path, 
    like a trail of bread crumbs. Overtime, this discarded energy could coalesce into something larger.
</p>

<p>This might be supported by observations of filaments of galaxies:</p>

<blockquote>
    <i>An analysis of thousands of galaxies finds that they are strung like pearls on a necklace, even on relatively small scales.

        <br>
        <br>
        On large scales, the universe is comprised of empty voids, punctuated by narrow, winding filaments of dark matter that guide the growth of galaxies and galaxy clusters. This cosmic web, which has taken decades to map, holds a repeating pattern on the order of hundreds of millions of light years.

    </i>
    <br>
    <br>
    <a href="https://www.newscientist.com/article/dn26598-galaxies-in-filaments-spaced-like-pearls-on-a-necklace/">Galaxies in filaments spaced like pearls on a necklace</a>
</blockquote>

<p>work in progress</p>

<h3>Test 4: Close range red-shift</h3>

<p>While hypothesis 1 predicts the same red-shifts as the expanding model, hypothesis 2 shows us something a little different. 
    The red-shifts predicted by hypothesis seem to have a late start, which we can see by zooming into the first few billion years of the graph.
</p>

<p class="pimg">
    <img src="img/graph_redshift_zoom.png">
</p>

<p>The green and white lines can be made by either hypothesis 1 or the expanding model. 
    Green is for H = 74 km/s/Mpc, and white is for H = 67 km/s/Mpc. The red line represents hypothesis 2.</p>

<p>As you can see from the red line, it has a slower start than the other models. There is very little red-shift for the first billion years.</p>

<p>Then hypothesis 2 comes back and catches up to the green line, H = 74 km/s/Mpc. It follows the green line for a bit, 
    before jumping over to the white line, H = 67 km/s/Mpc. Then it does its own thing and flattens out.</p>

<p>work in progress</p>

<hr>

<h2>Conclusion</h2>

<p>Cosmological redshifts have been a known, observed fact since 1929.</p>

<p>We could assume the redshifts indicate motion, which means:</p> 

<ul>
    <li>the universe is expanding</li>
    <li>there are age and size limits to the universe</li>
    <li>the universe inflated in the first nanosecond</li>
    <li>it is dominated by dark matter and dark energy</li>
    <li>it's currently accelerating</li>
</ul>

<p>Or we could assume the redshifts are themselves a new feature of the universe, which means:</p>

<ul>
    <li>light doesn't travel to infinity at a constant speed</li>
    <li>the observable region is an insignificant sample of an indefinitely large and old universe</li>
</ul>

<p>When interpreting the red-shifts as Doppler effects in the 20th century, astronomers didn't know this idea 
    would lead to inflation or dark energy. In fact, they chose the velocity-shift interpretation because it 
    was known and familiar and didn't require new laws of physics.</p>

<p>In retrospect, it should come as no surprise to us that when telescopes could show us what's beyond the Milky Way,
    they would also reveal a new fundamental law of nature.</p>

<p>If dark energy is in the consideration as a possible fundamental ingredient of nature despite having never been observed, 
    then the actual observations that led to its conjecture, cosmological redshift, should be considered as well.</p>

<p>I would like to finish by quoting Edwin Hubble's conclusion in <u>The Observational Approach to Cosmology</u>:</p>

<blockquote>
    <i>We seem to face, as once before in the days of Copernicus, a choice between a small, finite universe, 
    and a universe indefinitely large plus a new principle of nature.</i> 
</blockquote>

<br>

<hr>

<p>Questions, comments, concerns?</p>
<ul>
    <li>Create a <a href="https://github.com/mikehelland/hubbles-law/issues">GitHub Issue</a></li>
    <li>Or <a href="mailto:mike@mikehelland.com">mike@mikehelland.com</a></li>
</ul>

<p>The source code for the models on this page are <a href="https://github.com/mikehelland/hubbles-law/blob/master/index.htm">here on GitHub</a>. 
</p>

<p>Check out <a href="test.htm">the Testing Page</a> to try your own hypotheses and values</p>

<hr>

<h2>Bonus material:</h2>

<p><a href="faq.htm">Frequency Asked Questions</a></p>

<p><a href="img/paper1941.png">Newspaper article</a> announcing Edwin Hubble has refuted the expanding universe theory, Dec. 30, 1941:</p>

<hr>

<h2>Change Log:</h2>

<ul>
    <li><i>26 Nov 2020</i> - Added the tube test. </li>
    <li><i>24 Nov 2020</i> - Reworked conclusion. </li>
    <li><i>24 Nov 2020</i> - Added Photons section. </li>
    <li><i>23 Nov 2020</i> - Rewrote introduction and hypothesis, showing code along the way. </li>
    <li><i>23 Nov 2020</i> - Moved general questions to FAQ </li>
    <li><i>20 Nov 2020</i> - Added redshift in our galaxy section. </li>
    <li><i>19 Nov 2020</i> - Added Varying Speed of Light section. </li>
    <li><i>19 Nov 2020</i> - Rewrote hypothesis and tired light sections. Added Hubble tension toggle. </li>
    <li><i>17 Nov 2020</i> - Rewrote introduction and hypothesis sections. </li>
    <li><i>16 Nov 2020</i> - Added conclusion, and bonus newspaper article. </li>
    <li><i>16 Nov 2020</i> - Added CMB question and answer. </li>
    <li><i>14 Nov 2020</i> - Added "Isn't expansion a fact?" question and answer. </li>
    <li><i>14 Nov 2020</i> - Fixed (1 - H &times; D) to (1 + H &times; D). Fixed units. </li>
    <li><i>12 Nov 2020</i> - Original. </li>
</ul>

</div>

<div id="right">
    <canvas id="graph" height="600" width="600"></canvas>
    <br>
    <div id="y-axis">
        Y-axis: <select id="graph-y-axis">
            <option>time to target (billions of years)</option>
            <option>z red-shift</option>
        </select>
    </div>
</div>

<script>

    var graph = document.getElementById("graph")
    var ctxG = graph.getContext("2d")
    var models = []
    
    var yAxis = document.getElementById("graph-y-axis")
    yAxis.selectedIndex = 0
    document.getElementById("set-y-axis").onclick = e => {
        yAxis.selectedIndex = 1
        document.getElementById("y-axis").style.display = "block"
    }
    
    // the models advance by 1 million years each step
    // the units for distance are in Mly (million light years)

    // the speed of light is 1 million lightyears per 1 million years
    // Hubble's Constant is in units of Mly^-1 

    var c = 1

    var zoom = 0.056
    var zoomG = zoom * 0.65
    var zoomGY = zoom * 0.18
    var offset = 20
    
    var dgi
    function drawGraph() {
        
        ctxG.lineWidth = 1

        ctxG.fillStyle = "black"
        ctxG.fillRect(0, 0, graph.width, graph.height)

        ctxG.fillStyle = "white"

        ctxG.strokeStyle = "white" 
        ctxG.strokeRect(offset, -10, graph.width, graph.height + 10 - offset)
        
        ctxG.lineWidth = 2
        for (var m = 0; m < models.length; m++) {
            ctxG.strokeStyle = models[m].color
            ctxG.beginPath()
            ctxG.moveTo(offset, graph.height - offset)
            for (var i = 0; i < models[m].targets.length; i++) {
                if (models[m].targets[i].hit) {
                    //ctxG.lineTo(offset + models[m].targets[i].start * zoomG, -offset + graph.height - models[m].targets[i].hit * zoomGY)
                    if (yAxis.selectedIndex === 0) {
                        ctxG.lineTo(offset + models[m].targets[i].start * zoomG, 
                                    -offset + graph.height - models[m].targets[i].hit * zoomGY)
                    }
                    else if (yAxis.selectedIndex === 1) {
                        // show the difference in time with a static model
                        ctxG.lineTo(offset + models[m].targets[i].start * zoomG, -offset + graph.height - 
                        models[m].targets[i].z * 10000
                            * zoomGY)
                    }
                }
            }
            ctxG.stroke()            
        }

        ctxG.fillText(yAxis.value, offset + 5, offset)
        ctxG.fillText("starting distance to target (billion light years)", graph.width - 240, graph.height - 30)
        
        if (yAxis.selectedIndex === 0) {
            for (dgi = 0; dgi < 80; dgi+=5) {
                ctxG.fillText(dgi, 4, -offset + graph.height - dgi * 1000 * zoomGY + 4)    
            }
        }
        else {
            for (dgi = 0; dgi < 110; dgi+=2) {
                ctxG.fillText(dgi / 10, 4, -offset + graph.height - dgi / 10 * 10000 * zoomGY + 4)    
            }
        }

        for (dgi = 0; dgi < 16; dgi+=2) {
            ctxG.fillText(dgi, offset + dgi * 1000 * zoomG, graph.height - 5)    
        }
    }

    function setupModel(model) {
        
        var playButton = document.createElement("button")
        playButton.innerHTML = "Click HERE to run"
        playButton.onclick = () => {
            if (playButton.innerHTML === "Reset") {
                playButton.innerHTML = "Click HERE to run"
                resetModel(model)
                draw(model.ctx, model)
            }
            else {
                runModel(model)
                playButton.innerHTML = "Reset"
            }
        }

        model.canvas = document.createElement("canvas")

        model.div.appendChild(playButton)
        model.div.appendChild(model.canvas)

        model.ctx = model.canvas.getContext("2d")
        model.nextTarget = 0

        model.canvas.width = 700
        model.canvas.height = 40
        
        // make a target every 200 million light years 
        model.targets = []
        for (var i = 200; i <= 26800; i+=200) {
            model.targets.push({label: i/1000, start: i, x: i})
        }

        model.ctx.font = "8px sans-serif"

        draw(model.ctx, model)

        models.push(model)
    }

    function draw(ctx, exp) {

        ctx.fillStyle = "black"
        ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)

        for (var i = 0; i < exp.targets.length; i++) {
            if (exp.targets[i].hit) {
                ctx.strokeStyle = exp.color
                ctx.lineWidth = 3
            }
            else {
                ctx.strokeStyle = "white"
                ctx.lineWidth = 2
            }
            ctx.beginPath()
            ctx.moveTo(exp.targets[i].x * (exp.zoom || zoom), 0)
            ctx.lineTo(exp.targets[i].x * (exp.zoom || zoom), ctx.canvas.height)
            
            ctx.stroke()
        }

        ctx.fillStyle = "yellow"
        ctx.fillRect(exp.photon.x * (exp.zoom || zoom) - 2, ctx.canvas.height / 2, 5, 5)
    }

    function resetModel(model) {
        model.running = false
        model.photon.x = 0
        model.photon.dx = c
        model.nextTarget = 0
        model.targets.forEach(target => {
            target.x = target.start
            target.hit = 0
        })
    
        model.t = 0
    }

    function runModel(model) {
        
        resetModel(model)

        model.running = true

        var i, v, z
        var batch = 30
        var handle = setInterval(function () {
            for (i = 0; i < batch; i++) {
                if (model.running && model.targets[model.nextTarget] && model.t < 80000) {
                    model.t++
                    model.next()

                    if (model.targets[model.nextTarget].x <= model.photon.x) {
                        model.targets[model.nextTarget].hit = model.t

                        if (model.photon.f_init) {
                            z = (model.photon.f_init - model.photon.f) / model.photon.f
                        }
                        else if (model.targets[model.nextTarget].dx) {
                            v = 1 - model.targets[model.nextTarget].dx 
                            z = (1 - v) / v
                        }
                        else {
                            v = model.photon.dx
                            z = (1 - v) / v
                        }
                        model.targets[model.nextTarget].z = z || 0
                        model.nextTarget++
                    }
                }
                else {
                    clearInterval(handle)
                    model.running = false
                }
            }
        }, 0)
    }

    setupModel({
        div: document.getElementById("staticModel"),
        name: "Static",
        color: "blue", 
        photon: {x: 0},
        next: function () {
            this.photon.x += c
        }
    })
    setupModel({
        div: document.getElementById("expandingFast"),
        name: "Expanding Fast",
        color: "#888888", 
        H: 0.000076,
        photon: {x: 0},
        zoom: 0.03,
        next: function () {
            this.photon.x += c
            for (var i = 0; i < this.targets.length; i++) {
                this.targets[i].dx = this.targets[i].start * this.H
                this.targets[i].x += this.targets[i].dx
            }
        }
    })
    setupModel({
        div: document.getElementById("expandingSlow"),
        name: "Expanding Slow",
        color: "#888888", 
        H: 0.000069,
        photon: {x: 0},
        zoom: 0.03,
        next: function () {
            this.photon.x += c
            for (var i = 0; i < this.targets.length; i++) {
                this.targets[i].dx = this.targets[i].start * this.H
                this.targets[i].x += this.targets[i].dx
            }
        }
    })
    setupModel({
        div: document.getElementById("redshift1"),
        name: "Redshift by distance",
        color: "green", 
        H: 0.000076,
        photon: {x: 0, dx: c, f_init: 6e5, w: 499.65},
        next: function () {
            //this.photon.x += c - this.H * this.photon.x
            this.photon.v = c - this.H * this.photon.x
            this.photon.x += this.photon.v
            this.photon.f = this.photon.v * 299792458 / this.photon.w
        }
    })
    /*setupModel({
        div: document.getElementById("redshift2"),
        name: "Redshift by distance 2",
        color: "magenta", 
        H: 0.00035,
        photon: {x: 0, dx: c},
        next: function () {
            this.photon.x += c / (1 + this.H * this.photon.x)
        }
    })
    setupModel({
        div: document.getElementById("redshift3"),
        name: "v_light = c / (1 + H &times; D)^2",
        color: "purple", 
        H: 0.00015,
        photon: {x: 0, dx: c},
        next: function () {
            this.photon.x += c / Math.pow(1 + this.H * this.photon.x, 2)
        }
    })*/
    setupModel({
        div: document.getElementById("redshift4"),
        name: "v_light = c / (1 + (H &times; D)^2)",
        color: "red", 
        H: 0.00016,
        photon: {x: 0, dx: c},
        next: function () {
            this.photon.dx = c / (1 + Math.pow(this.H * this.photon.x, 2))
            this.photon.x += this.photon.dx
        }
    })


    setInterval(() => {
        for (var m = 0; m < models.length; m++) {
            if (models[m].running) {
                draw(models[m].ctx, models[m]) 
            }
        }

        drawGraph()
    }, 1000 / 60)

</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.4.0/highlight.min.js"></script>
<script>hljs.initHighlightingOnLoad();</script>
